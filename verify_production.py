#!/usr/bin/env python3
"""
üîç Verificaci√≥n de Configuraci√≥n de Producci√≥n
"""
import asyncio
import inspect
from simple_professional_manager import SimpleProfessionalTradingManager

async def verify_tcn_production():
    print('üîç Verificando configuraci√≥n de producci√≥n...')
    print('=' * 50)

    manager = SimpleProfessionalTradingManager()

    # Verificar que no hay c√≥digo de se√±ales aleatorias
    source = inspect.getsource(manager._generate_tcn_signals)

    print('üìã An√°lisis del c√≥digo de se√±ales:')

    if 'random' in source.lower():
        print('‚ùå ALERTA: C√≥digo aleatorio detectado')
        print('‚ö†Ô∏è El sistema NO est√° listo para producci√≥n')
        return False
    else:
        print('‚úÖ Sin c√≥digo aleatorio detectado')

    if 'EnhancedTCNPredictor' in source:
        print('‚úÖ Modelo TCN configurado correctamente')
    else:
        print('‚ùå Modelo TCN no encontrado')
        return False

    if 'AdvancedBinanceData' in source:
        print('‚úÖ Proveedor de datos reales configurado')
    else:
        print('‚ùå Proveedor de datos no encontrado')
        return False

    if 'predict_enhanced' in source:
        print('‚úÖ Predicci√≥n avanzada habilitada')
    else:
        print('‚ùå Predicci√≥n avanzada no encontrada')
        return False

    # Verificar filtros de seguridad
    if "signal != 'BUY'" in source and "Solo BUY permitido en Spot" in source:
        print('‚úÖ Filtros de seguridad para Spot trading activos')
    else:
        print('‚ö†Ô∏è Filtros de seguridad no detectados')

    if 'confidence < 0.70' in source:
        print('‚úÖ Filtro de confianza m√≠nima (70%) activo')
    else:
        print('‚ö†Ô∏è Filtro de confianza no detectado')

    print('\nüéØ RESUMEN:')
    print('‚úÖ Sistema usando modelo TCN REAL')
    print('‚úÖ Datos reales de Binance')
    print('‚úÖ Filtros de seguridad activos')
    print('‚úÖ Compatible con Binance Spot')
    print('‚úÖ SISTEMA LISTO PARA PRODUCCI√ìN')

    return True

if __name__ == "__main__":
    result = asyncio.run(verify_tcn_production())
    print(f'\nüöÄ Estado: {"PRODUCCI√ìN LISTA" if result else "REVISAR CONFIGURACI√ìN"}')
